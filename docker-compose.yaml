services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: python manage.py runserver 0.0.0.0:8000
  #   volumes:
  #     - .:/app
  #     - static_volume:/app/staticfiles
  #     - media_volume:/app/media
  #   ports:
  #     - '8000:8000'
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db
  #     - rabbitmq

  # celery:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: celery -A finAI worker --loglevel=info
  #   volumes:
  #     - .:/app
  #     - media_volume:/app/media
  #     - static_volume:/app/staticfiles
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db
  #     - rabbitmq

volumes:
  postgres_data:
  rabbitmq_data:
  # static_volume:
  # media_volume: